{"version":3,"sources":["components/Card.js","components/Shimmer.js","components/Skeleton.js","App.js","index.js"],"names":["Card","title","overview","year","genres","poster","className","src","alt","Shimmer","Skeleton","App","props","state","shows","currentDate","Date","dateString","moment","format","this","setState","setTimeout","a","fetch","showResponse","genreResponse","json","results","genreString","find","genre","id","name","i","nextGenre","length","map","show","index","poster_path","first_air_date","getFullYear","getGenreString","genre_ids","num","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAEe,SAASA,EAAT,GAAwD,IAAzCC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OACzD,OACI,0BAASC,UAAU,OAAnB,UACI,qBAAKC,IAAKF,EAAQG,IAAI,cACtB,gCACI,6BAAKP,IACL,sBAAKK,UAAU,OAAf,UACI,4BAAIH,IACJ,4BAAIC,OAER,4BAAIF,UCVL,SAASO,IACpB,OACI,qBAAKH,UAAU,oBAAf,SACI,qBAAKA,UAAU,cCFZ,SAASI,IACpB,OACI,sBAAKJ,UAAU,OAAf,UACI,qBAAKA,UAAU,uBACf,gCACI,qBAAKA,UAAU,yBACf,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,0BAEnB,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,kCAEnB,cAACG,EAAD,O,oBC0DGE,E,kDAjEX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CAACC,MAAO,KAAMV,OAAQ,KAAMW,YAAa,IAFvC,E,gEAME,IAAD,OAGZA,EAAc,IAAIC,KAChBC,EAAaC,IAAOH,GAAaI,OAAO,iBAC9CC,KAAKC,SAAS,CAACN,YAAaE,IAI5BK,WAAU,sBAAC,kCAAAC,EAAA,sEACoBC,MAAM,0FAD1B,cACDC,EADC,gBAEqBD,MAAM,sGAF3B,cAEDE,EAFC,gBAGaD,EAAaE,OAH1B,cAGDb,EAHC,iBAIcY,EAAcC,OAJ5B,QAIDvB,EAJC,OAKP,EAAKiB,SAAS,CAACP,MAAOA,EAAMc,QAASxB,OAAQA,EAAOA,SAL7C,4CAMR,O,qCAIQA,GAKX,IALmB,IAAD,OAEdyB,EADaT,KAAKP,MAAMT,OAAO0B,MAAK,SAAAC,GAAK,OAAIA,EAAMC,KAAO5B,EAAO,MACxC6B,KAFX,WAKTC,GACL,IAAIC,EAAY,EAAKtB,MAAMT,OAAO0B,MAAK,SAAAC,GAAK,OAAIA,EAAMC,KAAO5B,EAAO8B,MACpEL,GAAW,YAASM,EAAUF,OAFzBC,EAAI,EAAGA,EAAI9B,EAAOgC,OAAQF,IAAK,EAA/BA,GAKT,OAAOL,I,+BAGD,IAAD,OAEL,OACI,qCACI,mCACI,mDACA,4BAAIT,KAAKP,MAAME,iBAEnB,iCACKK,KAAKP,MAAMC,OAASM,KAAKP,MAAMC,MAAMuB,KAAI,SAACC,EAAMC,GAAP,OACtC,cAACvC,EAAD,CAEIC,MAAOqC,EAAKL,KACZ5B,OAAM,0CAAqCiC,EAAKE,aAChDtC,SAAUoC,EAAKpC,SACfC,KAAM,IAAIa,KAAKsB,EAAKG,gBAAgBC,cACpCtC,OAAQ,EAAKuC,eAAeL,EAAKM,YAL5BN,EAAKN,QAQhBZ,KAAKP,MAAMC,OAAS,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGuB,KAAI,SAAAQ,GAAG,OAAI,cAACnC,EAAD,GAAemC,gB,GA1DlEC,IAAMC,WCLxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.509509cd.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Card({title, overview, year, genres, poster}) {\n    return (\n        <article className=\"card\">\n            <img src={poster} alt=\"TV poster\" />\n            <div>\n                <h2>{title}</h2>\n                <div className=\"meta\">\n                    <p>{year}</p>\n                    <p>{genres}</p>\n                </div>\n                <p>{overview}</p>\n            </div>\n        </article>\n    )\n}\n","import React from 'react'\n\nexport default function Shimmer() {\n    return (\n        <div className=\"shimmer-container\">\n            <div className=\"shimmer\" />\n        </div>\n    )\n}\n","import React from 'react'\nimport Shimmer from './Shimmer'\n\nexport default function Skeleton() {\n    return (\n        <div className=\"card\">\n            <div className=\"skel-line skel-img\"/>\n            <div>\n                <div className=\"skel-line skel-title\" />\n                <div className=\"meta\">\n                    <div className=\"skel-meta skel-data\"/>\n                    <div className=\"skel-meta skel-cat\"/>\n                </div>\n                <div className=\"skel-line skel-p\" />\n                <div className=\"skel-line skel-p\" />\n                <div className=\"skel-line skel-p\" />\n                <div className=\"skel-line skel-p skel-last\" />\n            </div>\n            <Shimmer />\n        </div>\n    )\n}","import React from 'react';\n\nimport './App.css';\n\nimport Card from './components/Card';\nimport Skeleton from './components/Skeleton';\n\n//to format current Date\nimport moment from 'moment'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {shows: null, genres: null, currentDate: ''};\n    }\n\n    //executes once after page load\n    componentDidMount() {\n\n        //get current date, format it, and update state\n        let currentDate = new Date();\n        const dateString = moment(currentDate).format(\"MMMM DD, YYYY\");\n        this.setState({currentDate: dateString});\n\n        //manual 5 sec delay to see skeleton components\n        //get shows and genres and update state\n        setTimeout(async () => {\n            const showResponse = await fetch('https://api.themoviedb.org/3/trending/tv/week?api_key=32e2293c913c59efce4695064290d9fb');\n            const genreResponse = await fetch('https://api.themoviedb.org/3/genre/tv/list?api_key=32e2293c913c59efce4695064290d9fb&language=en-US');\n            const shows = await showResponse.json();\n            const genres = await genreResponse.json();\n            this.setState({shows: shows.results, genres: genres.genres});\n        }, 5000)\n    }\n\n    // returns a string of all the show genres\n    getGenreString(genres){\n        let firstGenre = this.state.genres.find(genre => genre.id === genres[0]);\n        let genreString = firstGenre.name\n\n        // create comma between each additional genre\n        for (let i = 1; i < genres.length; i++){\n            let nextGenre = this.state.genres.find(genre => genre.id === genres[i]);\n            genreString += `, ${nextGenre.name}`;\n        }\n\n        return genreString;\n    }\n\n    render() {\n\n        return (\n            <> \n                <header>\n                    <h1>Trending TV Shows</h1>\n                    <p>{this.state.currentDate}</p>\n                </header>\n                <main>\n                    {this.state.shows && this.state.shows.map((show, index) => \n                        <Card\n                            key={show.id}\n                            title={show.name}\n                            poster={`https://image.tmdb.org/t/p/w500/${show.poster_path}`}\n                            overview={show.overview}\n                            year={new Date(show.first_air_date).getFullYear()}\n                            genres={this.getGenreString(show.genre_ids)}\n                        />\n                    )}\n                    {!this.state.shows && [1, 2, 3, 4, 5].map(num => <Skeleton key={num}/>)}\n                </main>\n            </>\n        );\n    }\n    \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}